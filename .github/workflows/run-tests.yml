name: run-tests

on: [ push, pull_request ]

env:
  DB_DATABASE: testing
  DB_USER: root
  DB_PASSWORD: root
  ACTIONS_STEP_DEBUG: true

jobs:
  tests:
    runs-on: ${{ matrix.os }}

    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: false
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: $DB_DATABASE
          MYSQL_USER: $DB_USER
          MYSQL_PASSWORD: $DB_PASSWORD
        ports:
          - 3306/tcp
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        php: [ 8.2,8.3 ]
        laravel: [ 10.*,11.* ]
        stability: [ prefer-stable ]
        filament: [ 3.* ]
        dependency-version: [ prefer-stable ]
        include:
          - laravel: 10.*
            testbench: 8.*
            filament: 3.*
          - laravel: 11.*
            testbench: 9.*
            filament: 3.*

    name: P${{ matrix.php }} - L${{ matrix.laravel }} - - ${{ matrix.stability }}  - ${{ matrix.dependency-version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup MySQL Database
        run: mysql -h 127.0.0.1 -u $DB_USER -p$DB_PASSWORD -e "CREATE DATABASE IF NOT EXISTS $DB_DATABASE;"

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: mbstring, pdo_mysql
          coverage: none
          tools: composer

      - name: Install dependencies
        run: |
          composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" "filament/filament:${{ matrix.filament }}" --no-interaction --no-update
          composer update --${{ matrix.stability }} --prefer-dist --no-interaction

      - name: Setup Problem Matches
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Execute tests
        env:
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_CONNECTION: mysql
          DB_DATABASE: ${{env.DB_DATABASE}}
          DB_USERNAME: ${{env.DB_USER}}
          DB_PASSWORD: ${{env.DB_PASSWORD}}
        run: composer test tests
